This directory contains the source codes of the DD-SGCMC method. The source codes are described below:
    - dbcon.cpp: Database construction script. It performs two parallel simulations on a pair of replicas using MPI.
    Each replica uses half of the designated processors to run the simulation, thus the number of designated processors
    must be even. By default, the simulations are run on the constant-volume SGC ensemble, but modifying the following
    commands as shown should result in each replica reproducing a constant-pressure SGC ensemble.

        from>
        sprintf(command3,"fix nf all nvt temp %.1f %.1f 1",mc.temp,mc.temp);
        to>
        sprintf(command3,"fix nf all npt temp %.1f %.1f 1 iso %.2f 0.0 1",mc.temp,mc.temp,p0);

    and

        from>
        sprintf(restart_command,"fix nf all nvt temp %.1f %.1f 0.1",mc.temp,mc.temp);
        to>
        sprintf(restart_command,"fix nf all npt temp %.1f %.1f 0.1 iso 0.0 0.0 0.1",mc.temp,mc.temp);
   
    Each replica is running an MDMC simulation where the MD run is interrupted periodically by a cycle of MC steps.
    By default, the MD run length is 500 steps and the number of MC steps in each cycle is equal to the number of 
    atoms in each replica. We assumed the number of atoms in each replica is identical. During each MC step, a
    particle exchange trial move is performed between the replicas.
    It is also possible to perform particle exchanges within each replica by changing the following line in the code:
    
        from>
        double trial_move = 1;
        to>
        double trial_move = prob(mt);

    Allowing for particle exchanges within each replica may reduce the time necessary to reach thermal equilibrium.
    By default, this code does not perform structural relaxation after each trial move, but this behavior can be
    recovered by uncommenting the following lines in the source code:

        lmp->input->one("min_style cg");
        lmp->input->one("minimize 1.0e-5 0.0 100000 100000");
        lmp->input->one("run 0");

    The outputs generated by this code are described in ddsgcmc/database_construction/README

    - ddsgcmc.cpp: DD-SGCMC script. It performs an DD-SGCMC simulation on a target system at the constant-volume
    SGC ensemble (default). The modifications shown below, similar to the one described for dbcon.cpp, will result
    in a constant-pressure SGC ensemble simulation:
    
        from>
        sprintf(command2,"fix nf all nvt temp %.1f %.1f 1",mc.temp,mc.temp);
        to>
        sprintf(command2,"fix nf all npt temp %.1f %.1f 1 iso %.2f 0.0 1",mc.temp,mc.temp,p0);

    and

        from>
        sprintf(restart_command,"fix nf all nvt temp %.1f %.1f 0.1",mc.temp,mc.temp);
        to>
        sprintf(restart_command,"fix nf all npt temp %.1f %.1f 0.1 iso 0.0 0.0 0.1",mc.temp,mc.temp);

    The target system is running an MDMC simulation where the MD run is interrupted periodically by a cycle of MC steps.
    By default, the MD run length is 500 steps and the number of MC steps in each cycle is equal to the number of 
    atoms in each replica. We assumed the number of atoms in each replica is identical. During each MC step, a
    particle exchange trial move is performed between the replicas.
    By default, the energy difference is calculated using a value from the energy databases, but the traditional SGCMC behaviour can be recovered by
    uncommenting the following line in the source code of ddsgcmc.cpp:

        dErsv = mu[t1-1]-mu[t2-1];

    Notice that either way the DD-SGCMC script is creating a chemical potential vector, so the LAMMPS input file must include
    dummy equal style variables m1, m2, ... for the chemical potentials when performing the DD-SGCMC simulation.

   - mcvar2.h: Library with the commands used by dbcon.cpp and dbsgcmc.cpp.

    - Makefile: 
        $ make db -------------- Build database construction script  
        $ make dd -------------- Build DD-SGCMC script
        $ make all ------------- Build both 
    
